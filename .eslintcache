[{"D:\\Interests\\Projects\\parking-management\\src\\serviceWorker.js":"1","D:\\Interests\\Projects\\parking-management\\src\\SignIn.js":"2","D:\\Interests\\Projects\\parking-management\\src\\GoogleButton.js":"3","D:\\Interests\\Projects\\parking-management\\src\\reducer.js":"4","D:\\Interests\\Projects\\parking-management\\src\\firebase.js":"5","D:\\Interests\\Projects\\parking-management\\src\\SignUp.js":"6","D:\\Interests\\Projects\\parking-management\\src\\App.js":"7","D:\\Interests\\Projects\\parking-management\\src\\ProfileStatistics.js":"8","D:\\Interests\\Projects\\parking-management\\src\\AppBar.js":"9","D:\\Interests\\Projects\\parking-management\\src\\index.js":"10","D:\\Interests\\Projects\\parking-management\\src\\StateProvider.js":"11","D:\\Interests\\Projects\\parking-management\\src\\Login.js":"12","D:\\Interests\\Projects\\parking-management\\src\\Dashboard.js":"13","D:\\Interests\\Projects\\parking-management\\src\\EmailVerification.js":"14","D:\\Interests\\Projects\\parking-management\\src\\Dialog.js":"15"},{"size":5227,"mtime":1606534979075,"results":"16","hashOfConfig":"17"},{"size":5568,"mtime":1606635235251,"results":"18","hashOfConfig":"17"},{"size":1641,"mtime":1606534979072,"results":"19","hashOfConfig":"17"},{"size":1016,"mtime":1606580940458,"results":"20","hashOfConfig":"17"},{"size":946,"mtime":1606546466546,"results":"21","hashOfConfig":"17"},{"size":9609,"mtime":1606584995872,"results":"22","hashOfConfig":"17"},{"size":1872,"mtime":1606559860328,"results":"23","hashOfConfig":"17"},{"size":3378,"mtime":1606534979073,"results":"24","hashOfConfig":"17"},{"size":7703,"mtime":1606547031243,"results":"25","hashOfConfig":"17"},{"size":713,"mtime":1606534979075,"results":"26","hashOfConfig":"17"},{"size":375,"mtime":1606534979074,"results":"27","hashOfConfig":"17"},{"size":2505,"mtime":1606558664727,"results":"28","hashOfConfig":"17"},{"size":9280,"mtime":1606716116013,"results":"29","hashOfConfig":"17"},{"size":2410,"mtime":1606534979072,"results":"30","hashOfConfig":"17"},{"size":2172,"mtime":1606596638358,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1v6vacm",{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"34"},"D:\\Interests\\Projects\\parking-management\\src\\serviceWorker.js",[],["73","74"],"D:\\Interests\\Projects\\parking-management\\src\\SignIn.js",["75","76","77","78","79","80","81","82"],"D:\\Interests\\Projects\\parking-management\\src\\GoogleButton.js",[],"D:\\Interests\\Projects\\parking-management\\src\\reducer.js",[],["83","84"],"D:\\Interests\\Projects\\parking-management\\src\\firebase.js",[],["85","86"],"D:\\Interests\\Projects\\parking-management\\src\\SignUp.js",["87","88","89","90"],"D:\\Interests\\Projects\\parking-management\\src\\App.js",["91","92","93","94","95","96","97"],"import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\n//Components\r\nimport AppBar from \"./AppBar\";\r\nimport Login from \"./Login\";\r\nimport EmailVerification from \"./EmailVerification\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\n//Styles\r\nimport \"./App.css\";\r\n//Keys and State variables\r\nimport { db, storage, auth, googleProvider } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\n//material-ui Dependencies\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  //backdrop styles\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  //mui styles\r\n  const classes = useStyles();\r\n  //local state variables\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [view, setView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: authUser,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: null,\r\n        });\r\n      }\r\n      setView(true);\r\n    });\r\n  }, []);\r\n\r\n  return view ? (\r\n    user ? (\r\n      user.emailVerified || user == \"guest\" ? (\r\n        <div className=\"app\">\r\n          <AppBar />\r\n          <Dashboard />\r\n        </div>\r\n      ) : (\r\n        <EmailVerification />\r\n      )\r\n    ) : (\r\n      <div>\r\n        <Login />\r\n      </div>\r\n    )\r\n  ) : (\r\n    <Backdrop className={classes.backdrop} open={!view}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["98","99"],"D:\\Interests\\Projects\\parking-management\\src\\ProfileStatistics.js",["100"],"D:\\Interests\\Projects\\parking-management\\src\\AppBar.js",["101","102","103","104"],"import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport { db, storage, auth, googleProvider } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My Account</MenuItem>\r\n      <MenuItem\r\n        onClick={() => {\r\n          auth.signOut();\r\n          dispatch({\r\n            type: actionTypes.SET_USER,\r\n            user: null,\r\n          });\r\n        }}\r\n      >\r\n        Log Out\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <div backgroundColor=\"white\">\r\n        <AppBar position=\"static\" color=\"inherit\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n              Parking Management\r\n            </Typography>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n              />\r\n            </div>\r\n            <div className={classes.grow} />\r\n            <div className={classes.sectionDesktop}>\r\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                <Badge badgeContent={4} color=\"secondary\">\r\n                  <MailIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n              >\r\n                <Badge badgeContent={17} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.sectionMobile}>\r\n              <IconButton\r\n                aria-label=\"show more\"\r\n                aria-controls={mobileMenuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMobileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <Toolbar />\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Interests\\Projects\\parking-management\\src\\index.js",[],"D:\\Interests\\Projects\\parking-management\\src\\StateProvider.js",[],"D:\\Interests\\Projects\\parking-management\\src\\Login.js",["105","106","107","108","109"],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { db, storage, auth, googleProvider } from \"./firebase\";\r\n\r\nimport { actionTypes } from \"./reducer\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport firebase from \"firebase\";\r\n\r\nimport SignIn from \"./SignIn\";\r\nimport SignUp from \"./SignUp\";\r\nimport { MergeType } from \"@material-ui/icons\";\r\n\r\nfunction Login() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  const googleLogin = (userRole) => {\r\n    auth\r\n      .signInWithPopup(googleProvider)\r\n      .then((result) => {\r\n        db.collection(\"clients\")\r\n          .where(\"email\", \"==\", result.user.email)\r\n          .get()\r\n          .then((snapshot) => {\r\n            if (snapshot.exits) {\r\n              dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: {\r\n                  ...result.user,\r\n                  email: result.user.email,\r\n                  displayName: result.user.displayName,\r\n                  photoUrl: result.user.photoURL,\r\n                },\r\n              });\r\n            } else {\r\n              db.collection(\"clients\")\r\n                .doc()\r\n                .set({\r\n                  email: result.user.email,\r\n                  displayName: result.user.displayName,\r\n                  photoUrl: result.user.photoURL,\r\n                })\r\n                .then(\r\n                  dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: {\r\n                      ...result.user,\r\n                      email: result.user.email,\r\n                      displayName: result.user.displayName,\r\n                      photoUrl: result.user.photoURL,\r\n                    },\r\n                  })\r\n                );\r\n            }\r\n          });\r\n        if (typeof userRole == \"string\") {\r\n          db.collection(\"user_role\")\r\n            .doc(result.user.uid)\r\n            .set({ uid: result.user.uid, role: userRole }, { merge: true });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp googleLogin={googleLogin} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <SignIn googleLogin={googleLogin} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n",["110","111"],"D:\\Interests\\Projects\\parking-management\\src\\Dashboard.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React from \"react\";\r\nimport { Button, Link, Grid, Typography, Paper } from \"@material-ui/core\";\r\n\r\nimport { db, storage, auth, googleProvider } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport reducer, { actionTypes } from \"./reducer\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Dialog from \"./Dialog\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  occupied: {\r\n    backgroundColor: \"lightgray\",\r\n    margin: \"1%\",\r\n    padding: \"1%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flex: \"1\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    overFlow: \"scroll\",\r\n  },\r\n  notOccupied: {\r\n    backgroundColor: \"lightgreen\",\r\n    margin: \"1%\",\r\n    padding: \"1%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flex: \"1\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    overFlow: \"scroll\",\r\n  },\r\n  heroContent: {\r\n    margin: \"2%\",\r\n    padding: \"2%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flex: \"1\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    overFlow: \"scrool\",\r\n  },\r\n});\r\n\r\nfunction Dashboard() {\r\n  const [\r\n    { user, parkingZoneData, parkingSpaceData, displaySpaceData },\r\n    dispatch,\r\n  ] = useStateValue();\r\n\r\n  const [initialized, setInitialized] = React.useState(false);\r\n  const [zone, setZone] = React.useState(\"None\");\r\n  const [role, setRole] = React.useState(\"Guest\");\r\n  const handleZoneChange = (event) => {\r\n    setZone(event.target.value);\r\n  };\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const [parkingSpace, setParkingSpace] = React.useState({\r\n    spaceTitle: \"\",\r\n    occupied: \"\",\r\n    occupiedBy: \"\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  function initialize() {\r\n    setInitialized(true);\r\n    dispatch({\r\n      type: actionTypes.SET_PARKINGZONEDATA,\r\n      parkingZoneData: [\"A\", \"B\", \"C\"],\r\n    });\r\n    if (role == \"Booking Counter Agent\") {\r\n      db.collection(\"vehicle_parking\")\r\n        .get()\r\n        .then((res) => {\r\n          res.forEach((element) => {\r\n            element.ref.delete();\r\n          });\r\n        });\r\n    } else {\r\n      alert(\"Only Booking Counter Agent can Perform this.\");\r\n    }\r\n  }\r\n\r\n  const loadTransactions = () => {\r\n    db.collection(\"vehicle_parking\")\r\n      .get()\r\n      .then((res) => {\r\n        res.forEach((element) => {\r\n          element.ref.get().then((snapshot) => {\r\n            if (snapshot.exists && snapshot.data().spaceTitle) {\r\n              //copy to local\r\n\r\n              let obj = parkingSpaceData;\r\n              if (obj.hasOwnProperty(snapshot.data().spaceTitle[0])) {\r\n                obj[snapshot.data().spaceTitle[0]][\r\n                  snapshot.data().spaceTitle[1] - 1\r\n                ].occupied = true;\r\n                obj[snapshot.data().spaceTitle[0]][\r\n                  snapshot.data().spaceTitle[1] - 1\r\n                ].occupiedBy = snapshot.data().vehicle_id;\r\n              }\r\n\r\n              if (obj != parkingSpaceData)\r\n                dispatch({\r\n                  type: actionTypes.SET_PARKINGSPACEDATA,\r\n                  parkingSpaceData: obj,\r\n                });\r\n            }\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch({\r\n      type: actionTypes.SET_PARKINGZONEDATA,\r\n      parkingZoneData: [\"A\", \"B\", \"C\"],\r\n    });\r\n\r\n    db.collection(\"user_role\")\r\n      .doc(user.uid)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.exists) {\r\n          setRole(snapshot.data().role);\r\n        }\r\n      })\r\n      .catch();\r\n\r\n    loadTransactions();\r\n  }, []);\r\n  React.useEffect(() => {\r\n    let obj = {};\r\n    parkingZoneData.forEach((zone) => {\r\n      obj[zone] = Array.from(Array(10).keys()).map((item, i) => {\r\n        return {\r\n          spaceTitle: zone + (i + 1),\r\n          occupied: false,\r\n          occupiedBy: null,\r\n        };\r\n      });\r\n    });\r\n    dispatch({\r\n      type: actionTypes.SET_PARKINGSPACEDATA,\r\n      parkingSpaceData: obj,\r\n    });\r\n  }, [parkingZoneData]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch({\r\n      type: actionTypes.SET_DISPLAYSPACEDATA,\r\n      displaySpaceData: parkingSpaceData[zone] ? parkingSpaceData[zone] : [],\r\n    });\r\n  }, [parkingSpaceData, zone]);\r\n\r\n  React.useEffect(() => {\r\n    loadTransactions();\r\n  }, [parkingSpaceData]);\r\n\r\n  React.useEffect(() => {}, [displaySpaceData]);\r\n\r\n  const register = (spaceTitle, vehicle_id) => {\r\n    db.collection(\"vehicle_parking\")\r\n      .doc(vehicle_id)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (!snapshot.exists) {\r\n          db.collection(\"vehicle_parking\")\r\n            .doc(vehicle_id)\r\n            .set({ vehicle_id: vehicle_id, spaceTitle: spaceTitle })\r\n            .then(() => {\r\n              //update local copy\r\n              let obj = parkingSpaceData;\r\n              obj[spaceTitle[0]][spaceTitle[1] - 1].occupied = true;\r\n              obj[spaceTitle[0]][spaceTitle[1] - 1].occupiedBy = vehicle_id;\r\n              dispatch({\r\n                type: actionTypes.SET_PARKINGSPACEDATA,\r\n                parkingSpaceData: obj,\r\n              });\r\n            });\r\n        } else {\r\n          alert(\r\n            \"vehicle_id: \" +\r\n              vehicle_id +\r\n              \" is already parked at \" +\r\n              snapshot.data().spaceTitle\r\n          );\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n  const unRegister = (spaceTitle, vehicle_id) => {\r\n    db.collection(\"vehicle_parking\")\r\n      .doc(vehicle_id)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.exists) {\r\n          db.collection(\"vehicle_parking\")\r\n            .doc(vehicle_id)\r\n            .delete()\r\n            .then(() => {\r\n              //update local copy\r\n              let obj = parkingSpaceData;\r\n              obj[spaceTitle[0]][spaceTitle[1] - 1].occupied = false;\r\n              obj[spaceTitle[0]][spaceTitle[1] - 1].occupiedBy = null;\r\n              dispatch({\r\n                type: actionTypes.SET_PARKINGSPACEDATA,\r\n                parkingSpaceData: obj,\r\n              });\r\n            })\r\n            .catch();\r\n        } else {\r\n          alert(\"This does not exist\");\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const makeAmove = (registrationId) => {\r\n    setOpenDialog(false);\r\n    if (registrationId) {\r\n      if (parkingSpace.occupied) {\r\n        unRegister(parkingSpace.spaceTitle, registrationId);\r\n      } else {\r\n        register(parkingSpace.spaceTitle, registrationId);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Paper elevation={3} className={classes.heroContent}>\r\n        <Typography color={\"secondary\"}>{role}</Typography>\r\n        <Button onClick={initialize} color={\"primary\"}>\r\n          Initialize\r\n        </Button>\r\n        <FormControl>\r\n          <InputLabel id=\"zone-select-label\">Zone</InputLabel>\r\n          <Select\r\n            labelId=\"zone-select-label\"\r\n            id=\"zone-select\"\r\n            value={zone}\r\n            onChange={handleZoneChange}\r\n          >\r\n            <MenuItem value={\"None\"}>{\"NONE\"}</MenuItem>;\r\n            {parkingZoneData.map((item, index) => {\r\n              return <MenuItem value={item}>Zone {item}</MenuItem>;\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </Paper>\r\n\r\n      {/* sort\r\n      filter */}\r\n\r\n      {displaySpaceData.map((item, index) => {\r\n        return (\r\n          <Grid>\r\n            <Paper\r\n              className={item.occupied ? classes.occupied : classes.notOccupied}\r\n            >\r\n              <b>{item.spaceTitle}</b>\r\n              {\"  \"}\r\n              {item.occupied\r\n                ? \"Occupied By \" + item.occupiedBy\r\n                : \"Not Occupied\"}\r\n              {item.occupied ? (\r\n                <Button\r\n                  color={\"secondary\"}\r\n                  onClick={() => {\r\n                    if (role == \"Booking Counter Agent\") {\r\n                      setParkingSpace(item);\r\n                      setOpenDialog(true);\r\n                    } else {\r\n                      alert(\r\n                        \"Only Booking Counter Agent can Perform this action.\"\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  UnRegister\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  color={\"primary\"}\r\n                  onClick={() => {\r\n                    if (role == \"Booking Counter Agent\") {\r\n                      setParkingSpace(item);\r\n                      setOpenDialog(true);\r\n                    } else {\r\n                      alert(\r\n                        \"Only Booking Counter Agent can Perform this action.\"\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Register\r\n                </Button>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        );\r\n      })}\r\n      <Dialog\r\n        setOpen={setOpenDialog}\r\n        open={openDialog}\r\n        occupied={parkingSpace.occupied}\r\n        makeAmove={makeAmove}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\Interests\\Projects\\parking-management\\src\\EmailVerification.js",["126","127"],"import React from \"react\";\r\nimport { auth } from \"./firebase\";\r\n\r\nimport { Paper, Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { actionTypes } from \"./reducer.js\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst sendVerificationLink = () => {\r\n  auth.currentUser\r\n    .sendEmailVerification()\r\n    .then(() => {\r\n      alert(\"Sent!\" + \"📧\");\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      alert(err.message);\r\n    });\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    margin: theme.spacing(4),\r\n    padding: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  typography: {\r\n    textRendering: \"optimizeLegibility\",\r\n    color: \"#2c2c2c\",\r\n    fontFamily: \"Times New Roman, Times, serif\",\r\n    letterSpacing: \"0.03em\",\r\n  },\r\n}));\r\n\r\nfunction EmailVerification() {\r\n  const classes = useStyles();\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  const loginAsGuest = () => {\r\n    dispatch({\r\n      type: actionTypes.SET_USER,\r\n      user: \"guest\",\r\n    });\r\n    return <Redirect to={\"/\"} />;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <center>\r\n        <Paper color=\"transparent\" elevation={5} className={classes.paper}>\r\n          <Typography variant=\"h4\" className={classes.typography}>\r\n            Dear user, Kindly verify email address to proceed.\r\n            <br />\r\n            Send verification Link Now{\" \"}\r\n            <span>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={sendVerificationLink}\r\n              >\r\n                verify email\r\n              </Button>\r\n            </span>\r\n          </Typography>\r\n        </Paper>\r\n        <Paper color=\"transparent\" elevation={5} className={classes.paper}>\r\n          <Typography variant=\"h4\" className={classes.typography}>\r\n            Change in mind, You can login as a Guest.{\" \"}\r\n            <span>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={loginAsGuest}\r\n              >\r\n                Guest\r\n              </Button>\r\n            </span>\r\n            <br />\r\n          </Typography>\r\n        </Paper>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailVerification;\r\n","D:\\Interests\\Projects\\parking-management\\src\\Dialog.js",["128"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nexport default function AlertDialog(props) {\r\n  const handleClickOpen = () => {\r\n    props.setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const [registrationId, setRegistrationId] = React.useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {!props.occupied ? \" Park your vehicle here?. \" : \" Checking out? \"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Please provide the Vehicle Registration Id.\r\n          </DialogContentText>\r\n          <TextField\r\n            id=\"registrationId\"\r\n            value={registrationId}\r\n            label=\"Registration Id \"\r\n            required\r\n            onChange={(event) => {\r\n              let val = event.target.value;\r\n              setRegistrationId(val);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setRegistrationId(\"\");\r\n              handleClose();\r\n            }}\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              let val = registrationId;\r\n              setRegistrationId(\"\");\r\n              if (val) props.makeAmove(val);\r\n            }}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            {props.occupied ? \"Checkout\" : \"Park\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":16,"column":10,"nodeType":"135","messageId":"136","endLine":16,"endColumn":18},{"ruleId":"133","severity":1,"message":"137","line":19,"column":10,"nodeType":"135","messageId":"136","endLine":19,"endColumn":12},{"ruleId":"133","severity":1,"message":"138","line":19,"column":14,"nodeType":"135","messageId":"136","endLine":19,"endColumn":21},{"ruleId":"133","severity":1,"message":"139","line":19,"column":29,"nodeType":"135","messageId":"136","endLine":19,"endColumn":43},{"ruleId":"133","severity":1,"message":"140","line":20,"column":10,"nodeType":"135","messageId":"136","endLine":20,"endColumn":24},{"ruleId":"133","severity":1,"message":"141","line":21,"column":8,"nodeType":"135","messageId":"136","endLine":21,"endColumn":12},{"ruleId":"133","severity":1,"message":"142","line":63,"column":12,"nodeType":"135","messageId":"136","endLine":63,"endColumn":16},{"ruleId":"133","severity":1,"message":"142","line":84,"column":14,"nodeType":"135","messageId":"136","endLine":84,"endColumn":18},{"ruleId":"129","replacedBy":"143"},{"ruleId":"131","replacedBy":"144"},{"ruleId":"129","replacedBy":"145"},{"ruleId":"131","replacedBy":"146"},{"ruleId":"133","severity":1,"message":"147","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":16},{"ruleId":"133","severity":1,"message":"138","line":18,"column":14,"nodeType":"135","messageId":"136","endLine":18,"endColumn":21},{"ruleId":"133","severity":1,"message":"139","line":18,"column":29,"nodeType":"135","messageId":"136","endLine":18,"endColumn":43},{"ruleId":"133","severity":1,"message":"142","line":73,"column":12,"nodeType":"135","messageId":"136","endLine":73,"endColumn":16},{"ruleId":"133","severity":1,"message":"148","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":16},{"ruleId":"133","severity":1,"message":"137","line":12,"column":10,"nodeType":"135","messageId":"136","endLine":12,"endColumn":12},{"ruleId":"133","severity":1,"message":"138","line":12,"column":14,"nodeType":"135","messageId":"136","endLine":12,"endColumn":21},{"ruleId":"133","severity":1,"message":"139","line":12,"column":29,"nodeType":"135","messageId":"136","endLine":12,"endColumn":43},{"ruleId":"133","severity":1,"message":"149","line":18,"column":8,"nodeType":"135","messageId":"136","endLine":18,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":51,"column":6,"nodeType":"152","endLine":51,"endColumn":8,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":55,"column":34,"nodeType":"156","messageId":"157","endLine":55,"endColumn":36},{"ruleId":"129","replacedBy":"158"},{"ruleId":"131","replacedBy":"159"},{"ruleId":"150","severity":1,"message":"160","line":59,"column":6,"nodeType":"152","endLine":59,"endColumn":8,"suggestions":"161"},{"ruleId":"133","severity":1,"message":"137","line":17,"column":10,"nodeType":"135","messageId":"136","endLine":17,"endColumn":12},{"ruleId":"133","severity":1,"message":"138","line":17,"column":14,"nodeType":"135","messageId":"136","endLine":17,"endColumn":21},{"ruleId":"133","severity":1,"message":"139","line":17,"column":29,"nodeType":"135","messageId":"136","endLine":17,"endColumn":43},{"ruleId":"133","severity":1,"message":"142","line":93,"column":12,"nodeType":"135","messageId":"136","endLine":93,"endColumn":16},{"ruleId":"133","severity":1,"message":"162","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"138","line":4,"column":14,"nodeType":"135","messageId":"136","endLine":4,"endColumn":21},{"ruleId":"133","severity":1,"message":"148","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":16},{"ruleId":"133","severity":1,"message":"163","line":12,"column":10,"nodeType":"135","messageId":"136","endLine":12,"endColumn":19},{"ruleId":"133","severity":1,"message":"142","line":15,"column":12,"nodeType":"135","messageId":"136","endLine":15,"endColumn":16},{"ruleId":"129","replacedBy":"164"},{"ruleId":"131","replacedBy":"165"},{"ruleId":"133","severity":1,"message":"166","line":2,"column":18,"nodeType":"135","messageId":"136","endLine":2,"endColumn":22},{"ruleId":"133","severity":1,"message":"138","line":4,"column":14,"nodeType":"135","messageId":"136","endLine":4,"endColumn":21},{"ruleId":"133","severity":1,"message":"167","line":4,"column":23,"nodeType":"135","messageId":"136","endLine":4,"endColumn":27},{"ruleId":"133","severity":1,"message":"139","line":4,"column":29,"nodeType":"135","messageId":"136","endLine":4,"endColumn":43},{"ruleId":"133","severity":1,"message":"168","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":15},{"ruleId":"133","severity":1,"message":"169","line":55,"column":10,"nodeType":"135","messageId":"136","endLine":55,"endColumn":21},{"ruleId":"154","severity":1,"message":"155","line":76,"column":14,"nodeType":"156","messageId":"157","endLine":76,"endColumn":16},{"ruleId":"154","severity":1,"message":"170","line":108,"column":23,"nodeType":"156","messageId":"157","endLine":108,"endColumn":25},{"ruleId":"150","severity":1,"message":"171","line":136,"column":6,"nodeType":"152","endLine":136,"endColumn":8,"suggestions":"172"},{"ruleId":"150","severity":1,"message":"173","line":152,"column":6,"nodeType":"152","endLine":152,"endColumn":23,"suggestions":"174"},{"ruleId":"150","severity":1,"message":"173","line":159,"column":6,"nodeType":"152","endLine":159,"endColumn":30,"suggestions":"175"},{"ruleId":"150","severity":1,"message":"176","line":163,"column":6,"nodeType":"152","endLine":163,"endColumn":24,"suggestions":"177"},{"ruleId":"154","severity":1,"message":"155","line":275,"column":30,"nodeType":"156","messageId":"157","endLine":275,"endColumn":32},{"ruleId":"154","severity":1,"message":"155","line":291,"column":30,"nodeType":"156","messageId":"157","endLine":291,"endColumn":32},{"ruleId":"178","severity":1,"message":"179","line":14,"column":21,"nodeType":"156","messageId":"180","endLine":14,"endColumn":22},{"ruleId":"133","severity":1,"message":"142","line":40,"column":12,"nodeType":"135","messageId":"136","endLine":40,"endColumn":16},{"ruleId":"133","severity":1,"message":"181","line":10,"column":9,"nodeType":"135","messageId":"136","endLine":10,"endColumn":24},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'storage' is defined but never used.","'googleProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'blue' is defined but never used.","'user' is assigned a value but never used.",["182"],["183"],["182"],["183"],"'Checkbox' is defined but never used.","'firebase' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["184"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["182"],["183"],"React Hook useEffect has a missing dependency: 'viewed'. Either include it or remove the dependency array.",["185"],"'useState' is defined but never used.","'MergeType' is defined but never used.",["182"],["183"],"'Link' is defined but never used.","'auth' is defined but never used.","'reducer' is defined but never used.","'initialized' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook React.useEffect has missing dependencies: 'dispatch', 'loadTransactions', and 'user.uid'. Either include them or remove the dependency array.",["186"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["187"],["188"],"React Hook React.useEffect has a missing dependency: 'loadTransactions'. Either include it or remove the dependency array.",["189"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'handleClickOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [dispatch]",{"range":"202","text":"203"},"Update the dependencies array to be: [viewed]",{"range":"204","text":"205"},"Update the dependencies array to be: [dispatch, loadTransactions, user.uid]",{"range":"206","text":"207"},"Update the dependencies array to be: [dispatch, parkingZoneData]",{"range":"208","text":"209"},"Update the dependencies array to be: [dispatch, parkingSpaceData, zone]",{"range":"210","text":"211"},"Update the dependencies array to be: [loadTransactions, parkingSpaceData]",{"range":"212","text":"213"},[1411,1413],"[dispatch]",[1867,1869],"[viewed]",[3815,3817],"[dispatch, loadTransactions, user.uid]",[4228,4245],"[dispatch, parkingZoneData]",[4434,4458],"[dispatch, parkingSpaceData, zone]",[4521,4539],"[loadTransactions, parkingSpaceData]"]